//
//
//
reg CaptureMD5_vector=0;
always @(posedge `DVT_FLAG[`DVTF_MD5_CAPTURE_EN_BIT]) CaptureMD5_vector=1;
initial begin
   repeat(1) @(posedge cep_tb.fpga.topDesign.topMod.md5.blackbox.clk);
   if (CaptureMD5_vector) begin
      @(negedge cep_tb.fpga.topDesign.topMod.md5.blackbox.rst);
      // next clock
      @(posedge cep_tb.fpga.topDesign.topMod.md5.blackbox.clk);
      captureMD5Stimulus();
   end
end
   
   task captureMD5Stimulus;
      int out;
      int sampleNum;      
      reg [(4*2)+512+(4*2)+128-1:0] temp;
      begin
	 sampleNum=0;
	 $display("Capturing stimulus");	 
	 out=$fopen("MD5_stimulus.csv","w");
	 $fwrite(out,"//************************************************************************\n");
	 $fwrite(out,"// Copyright (C) 2020 Massachusetts Institute of Technology\n");
	 $fwrite(out,"//\n");		
	 $fwrite(out,"// File Name:      MD5_stimulus.csv\n");
	 $fwrite(out,"// Program:        Common Evaluation Platform (CEP)\n");
	 $fwrite(out,"// Description:    MD5 Core unit testbench stimulus\n");
	 $fwrite(out,"// Notes:\n");        
	 $fwrite(out,"//\n");
	 $fwrite(out,"//************************************************************************\n");
	 //	 
	 // also need to capture the rst
	 //
	 $fwrite(out,"// column#1  : IN  rst\n");	 
	 $fwrite(out,"// column#2  : IN  msg_in_valid\n");
	 $fwrite(out,"// column#3  : IN  msg_padded[511:0]\n");	 
	 $fwrite(out,"// column#4  : OUT ready\n");	 
	 $fwrite(out,"// column#5  : OUT msg_out_valid\n");
	 $fwrite(out,"// column#6  : OUT msg_output[127:0]\n");
	 //
	 // wait until valid in to interleaver
	 while (1) begin
	    @(negedge cep_tb.fpga.topDesign.topMod.md5.blackbox.clk);
	    sampleNum++;
	    // MUST align to HEX number if _ is used!!!
	    $fwrite(out,"%x_%x_%x_%x_%x_%x\n",
		    {3'b0,cep_tb.fpga.topDesign.topMod.md5.blackbox.rst},	 
		    {3'b0,cep_tb.fpga.topDesign.topMod.md5.blackbox.msg_in_valid},
		    cep_tb.fpga.topDesign.topMod.md5.blackbox.msg_padded[511:0],	 
		    {3'b0,cep_tb.fpga.topDesign.topMod.md5.blackbox.ready},	 
		    {3'b0,cep_tb.fpga.topDesign.topMod.md5.blackbox.msg_out_valid},
		    cep_tb.fpga.topDesign.topMod.md5.blackbox.msg_output[127:0]
		    );
	 end
      end
   endtask //
   
